// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ProjectCreated extends ethereum.Event {
  get params(): ProjectCreated__Params {
    return new ProjectCreated__Params(this);
  }
}

export class ProjectCreated__Params {
  _event: ProjectCreated;

  constructor(event: ProjectCreated) {
    this._event = event;
  }

  get _teamName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _projectName(): string {
    return this._event.parameters[1].value.toString();
  }

  get _metaCID(): string {
    return this._event.parameters[2].value.toString();
  }

  get _member(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class ProjectMemberAdded extends ethereum.Event {
  get params(): ProjectMemberAdded__Params {
    return new ProjectMemberAdded__Params(this);
  }
}

export class ProjectMemberAdded__Params {
  _event: ProjectMemberAdded;

  constructor(event: ProjectMemberAdded) {
    this._event = event;
  }

  get _teamName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _projectName(): string {
    return this._event.parameters[1].value.toString();
  }

  get _member(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ProjectMemberRemoved extends ethereum.Event {
  get params(): ProjectMemberRemoved__Params {
    return new ProjectMemberRemoved__Params(this);
  }
}

export class ProjectMemberRemoved__Params {
  _event: ProjectMemberRemoved;

  constructor(event: ProjectMemberRemoved) {
    this._event = event;
  }

  get _teamName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _projectName(): string {
    return this._event.parameters[1].value.toString();
  }

  get _member(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ProjectUpdated extends ethereum.Event {
  get params(): ProjectUpdated__Params {
    return new ProjectUpdated__Params(this);
  }
}

export class ProjectUpdated__Params {
  _event: ProjectUpdated;

  constructor(event: ProjectUpdated) {
    this._event = event;
  }

  get _teamName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _projectName(): string {
    return this._event.parameters[1].value.toString();
  }

  get _metaCID(): string {
    return this._event.parameters[2].value.toString();
  }

  get _member(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class ReleaseApproved extends ethereum.Event {
  get params(): ReleaseApproved__Params {
    return new ReleaseApproved__Params(this);
  }
}

export class ReleaseApproved__Params {
  _event: ReleaseApproved;

  constructor(event: ReleaseApproved) {
    this._event = event;
  }

  get _teamName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _projectName(): string {
    return this._event.parameters[1].value.toString();
  }

  get _releaseName(): string {
    return this._event.parameters[2].value.toString();
  }

  get _sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class ReleaseCreated extends ethereum.Event {
  get params(): ReleaseCreated__Params {
    return new ReleaseCreated__Params(this);
  }
}

export class ReleaseCreated__Params {
  _event: ReleaseCreated;

  constructor(event: ReleaseCreated) {
    this._event = event;
  }

  get _teamName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _projectName(): string {
    return this._event.parameters[1].value.toString();
  }

  get _releaseName(): string {
    return this._event.parameters[2].value.toString();
  }

  get _metaCID(): string {
    return this._event.parameters[3].value.toString();
  }

  get _member(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class ReleaseRejected extends ethereum.Event {
  get params(): ReleaseRejected__Params {
    return new ReleaseRejected__Params(this);
  }
}

export class ReleaseRejected__Params {
  _event: ReleaseRejected;

  constructor(event: ReleaseRejected) {
    this._event = event;
  }

  get _teamName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _projectName(): string {
    return this._event.parameters[1].value.toString();
  }

  get _releaseName(): string {
    return this._event.parameters[2].value.toString();
  }

  get _sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class TeamCreated extends ethereum.Event {
  get params(): TeamCreated__Params {
    return new TeamCreated__Params(this);
  }
}

export class TeamCreated__Params {
  _event: TeamCreated;

  constructor(event: TeamCreated) {
    this._event = event;
  }

  get _teamName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _metaCID(): string {
    return this._event.parameters[1].value.toString();
  }

  get _sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TeamMemberAdded extends ethereum.Event {
  get params(): TeamMemberAdded__Params {
    return new TeamMemberAdded__Params(this);
  }
}

export class TeamMemberAdded__Params {
  _event: TeamMemberAdded;

  constructor(event: TeamMemberAdded) {
    this._event = event;
  }

  get _teamName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _member(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TeamMemberRemoved extends ethereum.Event {
  get params(): TeamMemberRemoved__Params {
    return new TeamMemberRemoved__Params(this);
  }
}

export class TeamMemberRemoved__Params {
  _event: TeamMemberRemoved;

  constructor(event: TeamMemberRemoved) {
    this._event = event;
  }

  get _teamName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _member(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TeamUpdated extends ethereum.Event {
  get params(): TeamUpdated__Params {
    return new TeamUpdated__Params(this);
  }
}

export class TeamUpdated__Params {
  _event: TeamUpdated;

  constructor(event: TeamUpdated) {
    this._event = event;
  }

  get _teamName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _metaCID(): string {
    return this._event.parameters[1].value.toString();
  }

  get _member(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Valist extends ethereum.SmartContract {
  static bind(address: Address): Valist {
    return new Valist("Valist", address);
  }

  getLatestReleaseName(_teamName: string, _projectName: string): string {
    let result = super.call(
      "getLatestReleaseName",
      "getLatestReleaseName(string,string):(string)",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName)
      ]
    );

    return result[0].toString();
  }

  try_getLatestReleaseName(
    _teamName: string,
    _projectName: string
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getLatestReleaseName",
      "getLatestReleaseName(string,string):(string)",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getProjectMembers(
    _teamName: string,
    _projectName: string,
    _page: BigInt,
    _size: BigInt
  ): Array<Address> {
    let result = super.call(
      "getProjectMembers",
      "getProjectMembers(string,string,uint256,uint256):(address[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );

    return result[0].toAddressArray();
  }

  try_getProjectMembers(
    _teamName: string,
    _projectName: string,
    _page: BigInt,
    _size: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getProjectMembers",
      "getProjectMembers(string,string,uint256,uint256):(address[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getProjectMetaCID(_teamName: string, _projectName: string): string {
    let result = super.call(
      "getProjectMetaCID",
      "getProjectMetaCID(string,string):(string)",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName)
      ]
    );

    return result[0].toString();
  }

  try_getProjectMetaCID(
    _teamName: string,
    _projectName: string
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getProjectMetaCID",
      "getProjectMetaCID(string,string):(string)",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getProjectNames(
    _teamName: string,
    _page: BigInt,
    _size: BigInt
  ): Array<string> {
    let result = super.call(
      "getProjectNames",
      "getProjectNames(string,uint256,uint256):(string[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );

    return result[0].toStringArray();
  }

  try_getProjectNames(
    _teamName: string,
    _page: BigInt,
    _size: BigInt
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getProjectNames",
      "getProjectNames(string,uint256,uint256):(string[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  getReleaseApprovals(
    _teamName: string,
    _projectName: string,
    _releaseName: string,
    _page: BigInt,
    _size: BigInt
  ): Array<Address> {
    let result = super.call(
      "getReleaseApprovals",
      "getReleaseApprovals(string,string,string,uint256,uint256):(address[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName),
        ethereum.Value.fromString(_releaseName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );

    return result[0].toAddressArray();
  }

  try_getReleaseApprovals(
    _teamName: string,
    _projectName: string,
    _releaseName: string,
    _page: BigInt,
    _size: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getReleaseApprovals",
      "getReleaseApprovals(string,string,string,uint256,uint256):(address[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName),
        ethereum.Value.fromString(_releaseName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getReleaseMetaCID(
    _teamName: string,
    _projectName: string,
    _releaseName: string
  ): string {
    let result = super.call(
      "getReleaseMetaCID",
      "getReleaseMetaCID(string,string,string):(string)",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName),
        ethereum.Value.fromString(_releaseName)
      ]
    );

    return result[0].toString();
  }

  try_getReleaseMetaCID(
    _teamName: string,
    _projectName: string,
    _releaseName: string
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getReleaseMetaCID",
      "getReleaseMetaCID(string,string,string):(string)",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName),
        ethereum.Value.fromString(_releaseName)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getReleaseNames(
    _teamName: string,
    _projectName: string,
    _page: BigInt,
    _size: BigInt
  ): Array<string> {
    let result = super.call(
      "getReleaseNames",
      "getReleaseNames(string,string,uint256,uint256):(string[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );

    return result[0].toStringArray();
  }

  try_getReleaseNames(
    _teamName: string,
    _projectName: string,
    _page: BigInt,
    _size: BigInt
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getReleaseNames",
      "getReleaseNames(string,string,uint256,uint256):(string[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  getReleaseRejections(
    _teamName: string,
    _projectName: string,
    _releaseName: string,
    _page: BigInt,
    _size: BigInt
  ): Array<Address> {
    let result = super.call(
      "getReleaseRejections",
      "getReleaseRejections(string,string,string,uint256,uint256):(address[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName),
        ethereum.Value.fromString(_releaseName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );

    return result[0].toAddressArray();
  }

  try_getReleaseRejections(
    _teamName: string,
    _projectName: string,
    _releaseName: string,
    _page: BigInt,
    _size: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getReleaseRejections",
      "getReleaseRejections(string,string,string,uint256,uint256):(address[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromString(_projectName),
        ethereum.Value.fromString(_releaseName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getTeamMembers(
    _teamName: string,
    _page: BigInt,
    _size: BigInt
  ): Array<Address> {
    let result = super.call(
      "getTeamMembers",
      "getTeamMembers(string,uint256,uint256):(address[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );

    return result[0].toAddressArray();
  }

  try_getTeamMembers(
    _teamName: string,
    _page: BigInt,
    _size: BigInt
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getTeamMembers",
      "getTeamMembers(string,uint256,uint256):(address[])",
      [
        ethereum.Value.fromString(_teamName),
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getTeamMetaCID(_teamName: string): string {
    let result = super.call(
      "getTeamMetaCID",
      "getTeamMetaCID(string):(string)",
      [ethereum.Value.fromString(_teamName)]
    );

    return result[0].toString();
  }

  try_getTeamMetaCID(_teamName: string): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getTeamMetaCID",
      "getTeamMetaCID(string):(string)",
      [ethereum.Value.fromString(_teamName)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getTeamNames(_page: BigInt, _size: BigInt): Array<string> {
    let result = super.call(
      "getTeamNames",
      "getTeamNames(uint256,uint256):(string[])",
      [
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );

    return result[0].toStringArray();
  }

  try_getTeamNames(
    _page: BigInt,
    _size: BigInt
  ): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "getTeamNames",
      "getTeamNames(uint256,uint256):(string[])",
      [
        ethereum.Value.fromUnsignedBigInt(_page),
        ethereum.Value.fromUnsignedBigInt(_size)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  versionRecipient(): string {
    let result = super.call(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );

    return result[0].toString();
  }

  try_versionRecipient(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _trustedForwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddProjectMemberCall extends ethereum.Call {
  get inputs(): AddProjectMemberCall__Inputs {
    return new AddProjectMemberCall__Inputs(this);
  }

  get outputs(): AddProjectMemberCall__Outputs {
    return new AddProjectMemberCall__Outputs(this);
  }
}

export class AddProjectMemberCall__Inputs {
  _call: AddProjectMemberCall;

  constructor(call: AddProjectMemberCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _projectName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _address(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class AddProjectMemberCall__Outputs {
  _call: AddProjectMemberCall;

  constructor(call: AddProjectMemberCall) {
    this._call = call;
  }
}

export class AddTeamMemberCall extends ethereum.Call {
  get inputs(): AddTeamMemberCall__Inputs {
    return new AddTeamMemberCall__Inputs(this);
  }

  get outputs(): AddTeamMemberCall__Outputs {
    return new AddTeamMemberCall__Outputs(this);
  }
}

export class AddTeamMemberCall__Inputs {
  _call: AddTeamMemberCall;

  constructor(call: AddTeamMemberCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddTeamMemberCall__Outputs {
  _call: AddTeamMemberCall;

  constructor(call: AddTeamMemberCall) {
    this._call = call;
  }
}

export class ApproveReleaseCall extends ethereum.Call {
  get inputs(): ApproveReleaseCall__Inputs {
    return new ApproveReleaseCall__Inputs(this);
  }

  get outputs(): ApproveReleaseCall__Outputs {
    return new ApproveReleaseCall__Outputs(this);
  }
}

export class ApproveReleaseCall__Inputs {
  _call: ApproveReleaseCall;

  constructor(call: ApproveReleaseCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _projectName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _releaseName(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ApproveReleaseCall__Outputs {
  _call: ApproveReleaseCall;

  constructor(call: ApproveReleaseCall) {
    this._call = call;
  }
}

export class CreateProjectCall extends ethereum.Call {
  get inputs(): CreateProjectCall__Inputs {
    return new CreateProjectCall__Inputs(this);
  }

  get outputs(): CreateProjectCall__Outputs {
    return new CreateProjectCall__Outputs(this);
  }
}

export class CreateProjectCall__Inputs {
  _call: CreateProjectCall;

  constructor(call: CreateProjectCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _projectName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _metaCID(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _members(): Array<Address> {
    return this._call.inputValues[3].value.toAddressArray();
  }
}

export class CreateProjectCall__Outputs {
  _call: CreateProjectCall;

  constructor(call: CreateProjectCall) {
    this._call = call;
  }
}

export class CreateReleaseCall extends ethereum.Call {
  get inputs(): CreateReleaseCall__Inputs {
    return new CreateReleaseCall__Inputs(this);
  }

  get outputs(): CreateReleaseCall__Outputs {
    return new CreateReleaseCall__Outputs(this);
  }
}

export class CreateReleaseCall__Inputs {
  _call: CreateReleaseCall;

  constructor(call: CreateReleaseCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _projectName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _releaseName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _metaCID(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class CreateReleaseCall__Outputs {
  _call: CreateReleaseCall;

  constructor(call: CreateReleaseCall) {
    this._call = call;
  }
}

export class CreateTeamCall extends ethereum.Call {
  get inputs(): CreateTeamCall__Inputs {
    return new CreateTeamCall__Inputs(this);
  }

  get outputs(): CreateTeamCall__Outputs {
    return new CreateTeamCall__Outputs(this);
  }
}

export class CreateTeamCall__Inputs {
  _call: CreateTeamCall;

  constructor(call: CreateTeamCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _metaCID(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _members(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class CreateTeamCall__Outputs {
  _call: CreateTeamCall;

  constructor(call: CreateTeamCall) {
    this._call = call;
  }
}

export class RejectReleaseCall extends ethereum.Call {
  get inputs(): RejectReleaseCall__Inputs {
    return new RejectReleaseCall__Inputs(this);
  }

  get outputs(): RejectReleaseCall__Outputs {
    return new RejectReleaseCall__Outputs(this);
  }
}

export class RejectReleaseCall__Inputs {
  _call: RejectReleaseCall;

  constructor(call: RejectReleaseCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _projectName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _releaseName(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RejectReleaseCall__Outputs {
  _call: RejectReleaseCall;

  constructor(call: RejectReleaseCall) {
    this._call = call;
  }
}

export class RemoveProjectMemberCall extends ethereum.Call {
  get inputs(): RemoveProjectMemberCall__Inputs {
    return new RemoveProjectMemberCall__Inputs(this);
  }

  get outputs(): RemoveProjectMemberCall__Outputs {
    return new RemoveProjectMemberCall__Outputs(this);
  }
}

export class RemoveProjectMemberCall__Inputs {
  _call: RemoveProjectMemberCall;

  constructor(call: RemoveProjectMemberCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _projectName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _address(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RemoveProjectMemberCall__Outputs {
  _call: RemoveProjectMemberCall;

  constructor(call: RemoveProjectMemberCall) {
    this._call = call;
  }
}

export class RemoveTeamMemberCall extends ethereum.Call {
  get inputs(): RemoveTeamMemberCall__Inputs {
    return new RemoveTeamMemberCall__Inputs(this);
  }

  get outputs(): RemoveTeamMemberCall__Outputs {
    return new RemoveTeamMemberCall__Outputs(this);
  }
}

export class RemoveTeamMemberCall__Inputs {
  _call: RemoveTeamMemberCall;

  constructor(call: RemoveTeamMemberCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveTeamMemberCall__Outputs {
  _call: RemoveTeamMemberCall;

  constructor(call: RemoveTeamMemberCall) {
    this._call = call;
  }
}

export class SetProjectMetaCIDCall extends ethereum.Call {
  get inputs(): SetProjectMetaCIDCall__Inputs {
    return new SetProjectMetaCIDCall__Inputs(this);
  }

  get outputs(): SetProjectMetaCIDCall__Outputs {
    return new SetProjectMetaCIDCall__Outputs(this);
  }
}

export class SetProjectMetaCIDCall__Inputs {
  _call: SetProjectMetaCIDCall;

  constructor(call: SetProjectMetaCIDCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _projectName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _metaCID(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class SetProjectMetaCIDCall__Outputs {
  _call: SetProjectMetaCIDCall;

  constructor(call: SetProjectMetaCIDCall) {
    this._call = call;
  }
}

export class SetTeamMetaCIDCall extends ethereum.Call {
  get inputs(): SetTeamMetaCIDCall__Inputs {
    return new SetTeamMetaCIDCall__Inputs(this);
  }

  get outputs(): SetTeamMetaCIDCall__Outputs {
    return new SetTeamMetaCIDCall__Outputs(this);
  }
}

export class SetTeamMetaCIDCall__Inputs {
  _call: SetTeamMetaCIDCall;

  constructor(call: SetTeamMetaCIDCall) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _metaCID(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTeamMetaCIDCall__Outputs {
  _call: SetTeamMetaCIDCall;

  constructor(call: SetTeamMetaCIDCall) {
    this._call = call;
  }
}
